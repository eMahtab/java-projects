// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: RawDataResult.proto
// Protobuf Java Version: 4.29.2

package net.mahtabalam.protos;

public final class RawDataResultProto {
  private RawDataResultProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      RawDataResultProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code AlleleType}
   */
  public enum AlleleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HOMOZYGOUS = 0;</code>
     */
    HOMOZYGOUS(0),
    /**
     * <code>HETEROZYGOUS = 1;</code>
     */
    HETEROZYGOUS(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        AlleleType.class.getName());
    }
    /**
     * <code>HOMOZYGOUS = 0;</code>
     */
    public static final int HOMOZYGOUS_VALUE = 0;
    /**
     * <code>HETEROZYGOUS = 1;</code>
     */
    public static final int HETEROZYGOUS_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AlleleType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AlleleType forNumber(int value) {
      switch (value) {
        case 0: return HOMOZYGOUS;
        case 1: return HETEROZYGOUS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AlleleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AlleleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AlleleType>() {
            public AlleleType findValueByNumber(int number) {
              return AlleleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.mahtabalam.protos.RawDataResultProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final AlleleType[] VALUES = values();

    public static AlleleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AlleleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AlleleType)
  }

  public interface RawDataResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RawDataResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    java.util.List<net.mahtabalam.protos.RawDataResultProto.Well> 
        getWellResultsList();
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    net.mahtabalam.protos.RawDataResultProto.Well getWellResults(int index);
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    int getWellResultsCount();
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    java.util.List<? extends net.mahtabalam.protos.RawDataResultProto.WellOrBuilder> 
        getWellResultsOrBuilderList();
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    net.mahtabalam.protos.RawDataResultProto.WellOrBuilder getWellResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code RawDataResult}
   */
  public static final class RawDataResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:RawDataResult)
      RawDataResultOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        RawDataResult.class.getName());
    }
    // Use RawDataResult.newBuilder() to construct.
    private RawDataResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RawDataResult() {
      wellResults_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.mahtabalam.protos.RawDataResultProto.internal_static_RawDataResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.mahtabalam.protos.RawDataResultProto.internal_static_RawDataResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.mahtabalam.protos.RawDataResultProto.RawDataResult.class, net.mahtabalam.protos.RawDataResultProto.RawDataResult.Builder.class);
    }

    public static final int WELLRESULTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<net.mahtabalam.protos.RawDataResultProto.Well> wellResults_;
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    @java.lang.Override
    public java.util.List<net.mahtabalam.protos.RawDataResultProto.Well> getWellResultsList() {
      return wellResults_;
    }
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends net.mahtabalam.protos.RawDataResultProto.WellOrBuilder> 
        getWellResultsOrBuilderList() {
      return wellResults_;
    }
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    @java.lang.Override
    public int getWellResultsCount() {
      return wellResults_.size();
    }
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    @java.lang.Override
    public net.mahtabalam.protos.RawDataResultProto.Well getWellResults(int index) {
      return wellResults_.get(index);
    }
    /**
     * <code>repeated .Well wellResults = 1;</code>
     */
    @java.lang.Override
    public net.mahtabalam.protos.RawDataResultProto.WellOrBuilder getWellResultsOrBuilder(
        int index) {
      return wellResults_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < wellResults_.size(); i++) {
        output.writeMessage(1, wellResults_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < wellResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, wellResults_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.mahtabalam.protos.RawDataResultProto.RawDataResult)) {
        return super.equals(obj);
      }
      net.mahtabalam.protos.RawDataResultProto.RawDataResult other = (net.mahtabalam.protos.RawDataResultProto.RawDataResult) obj;

      if (!getWellResultsList()
          .equals(other.getWellResultsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWellResultsCount() > 0) {
        hash = (37 * hash) + WELLRESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getWellResultsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.mahtabalam.protos.RawDataResultProto.RawDataResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RawDataResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RawDataResult)
        net.mahtabalam.protos.RawDataResultProto.RawDataResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.mahtabalam.protos.RawDataResultProto.internal_static_RawDataResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.mahtabalam.protos.RawDataResultProto.internal_static_RawDataResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.mahtabalam.protos.RawDataResultProto.RawDataResult.class, net.mahtabalam.protos.RawDataResultProto.RawDataResult.Builder.class);
      }

      // Construct using net.mahtabalam.protos.RawDataResultProto.RawDataResult.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (wellResultsBuilder_ == null) {
          wellResults_ = java.util.Collections.emptyList();
        } else {
          wellResults_ = null;
          wellResultsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.mahtabalam.protos.RawDataResultProto.internal_static_RawDataResult_descriptor;
      }

      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.RawDataResult getDefaultInstanceForType() {
        return net.mahtabalam.protos.RawDataResultProto.RawDataResult.getDefaultInstance();
      }

      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.RawDataResult build() {
        net.mahtabalam.protos.RawDataResultProto.RawDataResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.RawDataResult buildPartial() {
        net.mahtabalam.protos.RawDataResultProto.RawDataResult result = new net.mahtabalam.protos.RawDataResultProto.RawDataResult(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(net.mahtabalam.protos.RawDataResultProto.RawDataResult result) {
        if (wellResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            wellResults_ = java.util.Collections.unmodifiableList(wellResults_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.wellResults_ = wellResults_;
        } else {
          result.wellResults_ = wellResultsBuilder_.build();
        }
      }

      private void buildPartial0(net.mahtabalam.protos.RawDataResultProto.RawDataResult result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.mahtabalam.protos.RawDataResultProto.RawDataResult) {
          return mergeFrom((net.mahtabalam.protos.RawDataResultProto.RawDataResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.mahtabalam.protos.RawDataResultProto.RawDataResult other) {
        if (other == net.mahtabalam.protos.RawDataResultProto.RawDataResult.getDefaultInstance()) return this;
        if (wellResultsBuilder_ == null) {
          if (!other.wellResults_.isEmpty()) {
            if (wellResults_.isEmpty()) {
              wellResults_ = other.wellResults_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWellResultsIsMutable();
              wellResults_.addAll(other.wellResults_);
            }
            onChanged();
          }
        } else {
          if (!other.wellResults_.isEmpty()) {
            if (wellResultsBuilder_.isEmpty()) {
              wellResultsBuilder_.dispose();
              wellResultsBuilder_ = null;
              wellResults_ = other.wellResults_;
              bitField0_ = (bitField0_ & ~0x00000001);
              wellResultsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWellResultsFieldBuilder() : null;
            } else {
              wellResultsBuilder_.addAllMessages(other.wellResults_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                net.mahtabalam.protos.RawDataResultProto.Well m =
                    input.readMessage(
                        net.mahtabalam.protos.RawDataResultProto.Well.parser(),
                        extensionRegistry);
                if (wellResultsBuilder_ == null) {
                  ensureWellResultsIsMutable();
                  wellResults_.add(m);
                } else {
                  wellResultsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<net.mahtabalam.protos.RawDataResultProto.Well> wellResults_ =
        java.util.Collections.emptyList();
      private void ensureWellResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          wellResults_ = new java.util.ArrayList<net.mahtabalam.protos.RawDataResultProto.Well>(wellResults_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.mahtabalam.protos.RawDataResultProto.Well, net.mahtabalam.protos.RawDataResultProto.Well.Builder, net.mahtabalam.protos.RawDataResultProto.WellOrBuilder> wellResultsBuilder_;

      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public java.util.List<net.mahtabalam.protos.RawDataResultProto.Well> getWellResultsList() {
        if (wellResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wellResults_);
        } else {
          return wellResultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public int getWellResultsCount() {
        if (wellResultsBuilder_ == null) {
          return wellResults_.size();
        } else {
          return wellResultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public net.mahtabalam.protos.RawDataResultProto.Well getWellResults(int index) {
        if (wellResultsBuilder_ == null) {
          return wellResults_.get(index);
        } else {
          return wellResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder setWellResults(
          int index, net.mahtabalam.protos.RawDataResultProto.Well value) {
        if (wellResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWellResultsIsMutable();
          wellResults_.set(index, value);
          onChanged();
        } else {
          wellResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder setWellResults(
          int index, net.mahtabalam.protos.RawDataResultProto.Well.Builder builderForValue) {
        if (wellResultsBuilder_ == null) {
          ensureWellResultsIsMutable();
          wellResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          wellResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder addWellResults(net.mahtabalam.protos.RawDataResultProto.Well value) {
        if (wellResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWellResultsIsMutable();
          wellResults_.add(value);
          onChanged();
        } else {
          wellResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder addWellResults(
          int index, net.mahtabalam.protos.RawDataResultProto.Well value) {
        if (wellResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWellResultsIsMutable();
          wellResults_.add(index, value);
          onChanged();
        } else {
          wellResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder addWellResults(
          net.mahtabalam.protos.RawDataResultProto.Well.Builder builderForValue) {
        if (wellResultsBuilder_ == null) {
          ensureWellResultsIsMutable();
          wellResults_.add(builderForValue.build());
          onChanged();
        } else {
          wellResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder addWellResults(
          int index, net.mahtabalam.protos.RawDataResultProto.Well.Builder builderForValue) {
        if (wellResultsBuilder_ == null) {
          ensureWellResultsIsMutable();
          wellResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          wellResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder addAllWellResults(
          java.lang.Iterable<? extends net.mahtabalam.protos.RawDataResultProto.Well> values) {
        if (wellResultsBuilder_ == null) {
          ensureWellResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, wellResults_);
          onChanged();
        } else {
          wellResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder clearWellResults() {
        if (wellResultsBuilder_ == null) {
          wellResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          wellResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public Builder removeWellResults(int index) {
        if (wellResultsBuilder_ == null) {
          ensureWellResultsIsMutable();
          wellResults_.remove(index);
          onChanged();
        } else {
          wellResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public net.mahtabalam.protos.RawDataResultProto.Well.Builder getWellResultsBuilder(
          int index) {
        return getWellResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public net.mahtabalam.protos.RawDataResultProto.WellOrBuilder getWellResultsOrBuilder(
          int index) {
        if (wellResultsBuilder_ == null) {
          return wellResults_.get(index);  } else {
          return wellResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public java.util.List<? extends net.mahtabalam.protos.RawDataResultProto.WellOrBuilder> 
           getWellResultsOrBuilderList() {
        if (wellResultsBuilder_ != null) {
          return wellResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wellResults_);
        }
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public net.mahtabalam.protos.RawDataResultProto.Well.Builder addWellResultsBuilder() {
        return getWellResultsFieldBuilder().addBuilder(
            net.mahtabalam.protos.RawDataResultProto.Well.getDefaultInstance());
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public net.mahtabalam.protos.RawDataResultProto.Well.Builder addWellResultsBuilder(
          int index) {
        return getWellResultsFieldBuilder().addBuilder(
            index, net.mahtabalam.protos.RawDataResultProto.Well.getDefaultInstance());
      }
      /**
       * <code>repeated .Well wellResults = 1;</code>
       */
      public java.util.List<net.mahtabalam.protos.RawDataResultProto.Well.Builder> 
           getWellResultsBuilderList() {
        return getWellResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.mahtabalam.protos.RawDataResultProto.Well, net.mahtabalam.protos.RawDataResultProto.Well.Builder, net.mahtabalam.protos.RawDataResultProto.WellOrBuilder> 
          getWellResultsFieldBuilder() {
        if (wellResultsBuilder_ == null) {
          wellResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.mahtabalam.protos.RawDataResultProto.Well, net.mahtabalam.protos.RawDataResultProto.Well.Builder, net.mahtabalam.protos.RawDataResultProto.WellOrBuilder>(
                  wellResults_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          wellResults_ = null;
        }
        return wellResultsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:RawDataResult)
    }

    // @@protoc_insertion_point(class_scope:RawDataResult)
    private static final net.mahtabalam.protos.RawDataResultProto.RawDataResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.mahtabalam.protos.RawDataResultProto.RawDataResult();
    }

    public static net.mahtabalam.protos.RawDataResultProto.RawDataResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawDataResult>
        PARSER = new com.google.protobuf.AbstractParser<RawDataResult>() {
      @java.lang.Override
      public RawDataResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RawDataResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawDataResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.mahtabalam.protos.RawDataResultProto.RawDataResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WellOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Well)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional .AlleleType alleleType = 2;</code>
     * @return Whether the alleleType field is set.
     */
    boolean hasAlleleType();
    /**
     * <code>optional .AlleleType alleleType = 2;</code>
     * @return The alleleType.
     */
    net.mahtabalam.protos.RawDataResultProto.AlleleType getAlleleType();

    /**
     * <code>repeated double allele1 = 3;</code>
     * @return A list containing the allele1.
     */
    java.util.List<java.lang.Double> getAllele1List();
    /**
     * <code>repeated double allele1 = 3;</code>
     * @return The count of allele1.
     */
    int getAllele1Count();
    /**
     * <code>repeated double allele1 = 3;</code>
     * @param index The index of the element to return.
     * @return The allele1 at the given index.
     */
    double getAllele1(int index);

    /**
     * <code>repeated double allele2 = 4;</code>
     * @return A list containing the allele2.
     */
    java.util.List<java.lang.Double> getAllele2List();
    /**
     * <code>repeated double allele2 = 4;</code>
     * @return The count of allele2.
     */
    int getAllele2Count();
    /**
     * <code>repeated double allele2 = 4;</code>
     * @param index The index of the element to return.
     * @return The allele2 at the given index.
     */
    double getAllele2(int index);
  }
  /**
   * Protobuf type {@code Well}
   */
  public static final class Well extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Well)
      WellOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        Well.class.getName());
    }
    // Use Well.newBuilder() to construct.
    private Well(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Well() {
      id_ = "";
      alleleType_ = 0;
      allele1_ = emptyDoubleList();
      allele2_ = emptyDoubleList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.mahtabalam.protos.RawDataResultProto.internal_static_Well_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.mahtabalam.protos.RawDataResultProto.internal_static_Well_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.mahtabalam.protos.RawDataResultProto.Well.class, net.mahtabalam.protos.RawDataResultProto.Well.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLELETYPE_FIELD_NUMBER = 2;
    private int alleleType_ = 0;
    /**
     * <code>optional .AlleleType alleleType = 2;</code>
     * @return Whether the alleleType field is set.
     */
    @java.lang.Override public boolean hasAlleleType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .AlleleType alleleType = 2;</code>
     * @return The alleleType.
     */
    @java.lang.Override public net.mahtabalam.protos.RawDataResultProto.AlleleType getAlleleType() {
      net.mahtabalam.protos.RawDataResultProto.AlleleType result = net.mahtabalam.protos.RawDataResultProto.AlleleType.forNumber(alleleType_);
      return result == null ? net.mahtabalam.protos.RawDataResultProto.AlleleType.HOMOZYGOUS : result;
    }

    public static final int ALLELE1_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList allele1_ =
        emptyDoubleList();
    /**
     * <code>repeated double allele1 = 3;</code>
     * @return A list containing the allele1.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAllele1List() {
      return allele1_;
    }
    /**
     * <code>repeated double allele1 = 3;</code>
     * @return The count of allele1.
     */
    public int getAllele1Count() {
      return allele1_.size();
    }
    /**
     * <code>repeated double allele1 = 3;</code>
     * @param index The index of the element to return.
     * @return The allele1 at the given index.
     */
    public double getAllele1(int index) {
      return allele1_.getDouble(index);
    }

    public static final int ALLELE2_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList allele2_ =
        emptyDoubleList();
    /**
     * <code>repeated double allele2 = 4;</code>
     * @return A list containing the allele2.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAllele2List() {
      return allele2_;
    }
    /**
     * <code>repeated double allele2 = 4;</code>
     * @return The count of allele2.
     */
    public int getAllele2Count() {
      return allele2_.size();
    }
    /**
     * <code>repeated double allele2 = 4;</code>
     * @param index The index of the element to return.
     * @return The allele2 at the given index.
     */
    public double getAllele2(int index) {
      return allele2_.getDouble(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, alleleType_);
      }
      for (int i = 0; i < allele1_.size(); i++) {
        output.writeDouble(3, allele1_.getDouble(i));
      }
      for (int i = 0; i < allele2_.size(); i++) {
        output.writeDouble(4, allele2_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, alleleType_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAllele1List().size();
        size += dataSize;
        size += 1 * getAllele1List().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAllele2List().size();
        size += dataSize;
        size += 1 * getAllele2List().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.mahtabalam.protos.RawDataResultProto.Well)) {
        return super.equals(obj);
      }
      net.mahtabalam.protos.RawDataResultProto.Well other = (net.mahtabalam.protos.RawDataResultProto.Well) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasAlleleType() != other.hasAlleleType()) return false;
      if (hasAlleleType()) {
        if (alleleType_ != other.alleleType_) return false;
      }
      if (!getAllele1List()
          .equals(other.getAllele1List())) return false;
      if (!getAllele2List()
          .equals(other.getAllele2List())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasAlleleType()) {
        hash = (37 * hash) + ALLELETYPE_FIELD_NUMBER;
        hash = (53 * hash) + alleleType_;
      }
      if (getAllele1Count() > 0) {
        hash = (37 * hash) + ALLELE1_FIELD_NUMBER;
        hash = (53 * hash) + getAllele1List().hashCode();
      }
      if (getAllele2Count() > 0) {
        hash = (37 * hash) + ALLELE2_FIELD_NUMBER;
        hash = (53 * hash) + getAllele2List().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static net.mahtabalam.protos.RawDataResultProto.Well parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static net.mahtabalam.protos.RawDataResultProto.Well parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static net.mahtabalam.protos.RawDataResultProto.Well parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.mahtabalam.protos.RawDataResultProto.Well prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Well}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Well)
        net.mahtabalam.protos.RawDataResultProto.WellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.mahtabalam.protos.RawDataResultProto.internal_static_Well_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.mahtabalam.protos.RawDataResultProto.internal_static_Well_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.mahtabalam.protos.RawDataResultProto.Well.class, net.mahtabalam.protos.RawDataResultProto.Well.Builder.class);
      }

      // Construct using net.mahtabalam.protos.RawDataResultProto.Well.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        alleleType_ = 0;
        allele1_ = emptyDoubleList();
        allele2_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.mahtabalam.protos.RawDataResultProto.internal_static_Well_descriptor;
      }

      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.Well getDefaultInstanceForType() {
        return net.mahtabalam.protos.RawDataResultProto.Well.getDefaultInstance();
      }

      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.Well build() {
        net.mahtabalam.protos.RawDataResultProto.Well result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.Well buildPartial() {
        net.mahtabalam.protos.RawDataResultProto.Well result = new net.mahtabalam.protos.RawDataResultProto.Well(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(net.mahtabalam.protos.RawDataResultProto.Well result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.alleleType_ = alleleType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          allele1_.makeImmutable();
          result.allele1_ = allele1_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          allele2_.makeImmutable();
          result.allele2_ = allele2_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.mahtabalam.protos.RawDataResultProto.Well) {
          return mergeFrom((net.mahtabalam.protos.RawDataResultProto.Well)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.mahtabalam.protos.RawDataResultProto.Well other) {
        if (other == net.mahtabalam.protos.RawDataResultProto.Well.getDefaultInstance()) return this;
        if (other.hasId()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasAlleleType()) {
          setAlleleType(other.getAlleleType());
        }
        if (!other.allele1_.isEmpty()) {
          if (allele1_.isEmpty()) {
            allele1_ = other.allele1_;
            allele1_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureAllele1IsMutable();
            allele1_.addAll(other.allele1_);
          }
          onChanged();
        }
        if (!other.allele2_.isEmpty()) {
          if (allele2_.isEmpty()) {
            allele2_ = other.allele2_;
            allele2_.makeImmutable();
            bitField0_ |= 0x00000008;
          } else {
            ensureAllele2IsMutable();
            allele2_.addAll(other.allele2_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                net.mahtabalam.protos.RawDataResultProto.AlleleType tmpValue =
                    net.mahtabalam.protos.RawDataResultProto.AlleleType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  alleleType_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 25: {
                double v = input.readDouble();
                ensureAllele1IsMutable();
                allele1_.addDouble(v);
                break;
              } // case 25
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAllele1IsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  allele1_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 33: {
                double v = input.readDouble();
                ensureAllele2IsMutable();
                allele2_.addDouble(v);
                break;
              } // case 33
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAllele2IsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  allele2_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int alleleType_ = 0;
      /**
       * <code>optional .AlleleType alleleType = 2;</code>
       * @return Whether the alleleType field is set.
       */
      @java.lang.Override public boolean hasAlleleType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .AlleleType alleleType = 2;</code>
       * @return The alleleType.
       */
      @java.lang.Override
      public net.mahtabalam.protos.RawDataResultProto.AlleleType getAlleleType() {
        net.mahtabalam.protos.RawDataResultProto.AlleleType result = net.mahtabalam.protos.RawDataResultProto.AlleleType.forNumber(alleleType_);
        return result == null ? net.mahtabalam.protos.RawDataResultProto.AlleleType.HOMOZYGOUS : result;
      }
      /**
       * <code>optional .AlleleType alleleType = 2;</code>
       * @param value The alleleType to set.
       * @return This builder for chaining.
       */
      public Builder setAlleleType(net.mahtabalam.protos.RawDataResultProto.AlleleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        alleleType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .AlleleType alleleType = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlleleType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alleleType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList allele1_ = emptyDoubleList();
      private void ensureAllele1IsMutable() {
        if (!allele1_.isModifiable()) {
          allele1_ = makeMutableCopy(allele1_);
        }
        bitField0_ |= 0x00000004;
      }
      private void ensureAllele1IsMutable(int capacity) {
        if (!allele1_.isModifiable()) {
          allele1_ = makeMutableCopy(allele1_, capacity);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @return A list containing the allele1.
       */
      public java.util.List<java.lang.Double>
          getAllele1List() {
        allele1_.makeImmutable();
        return allele1_;
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @return The count of allele1.
       */
      public int getAllele1Count() {
        return allele1_.size();
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @param index The index of the element to return.
       * @return The allele1 at the given index.
       */
      public double getAllele1(int index) {
        return allele1_.getDouble(index);
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @param index The index to set the value at.
       * @param value The allele1 to set.
       * @return This builder for chaining.
       */
      public Builder setAllele1(
          int index, double value) {

        ensureAllele1IsMutable();
        allele1_.setDouble(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @param value The allele1 to add.
       * @return This builder for chaining.
       */
      public Builder addAllele1(double value) {

        ensureAllele1IsMutable();
        allele1_.addDouble(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @param values The allele1 to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllele1(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAllele1IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allele1_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double allele1 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllele1() {
        allele1_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList allele2_ = emptyDoubleList();
      private void ensureAllele2IsMutable() {
        if (!allele2_.isModifiable()) {
          allele2_ = makeMutableCopy(allele2_);
        }
        bitField0_ |= 0x00000008;
      }
      private void ensureAllele2IsMutable(int capacity) {
        if (!allele2_.isModifiable()) {
          allele2_ = makeMutableCopy(allele2_, capacity);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @return A list containing the allele2.
       */
      public java.util.List<java.lang.Double>
          getAllele2List() {
        allele2_.makeImmutable();
        return allele2_;
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @return The count of allele2.
       */
      public int getAllele2Count() {
        return allele2_.size();
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @param index The index of the element to return.
       * @return The allele2 at the given index.
       */
      public double getAllele2(int index) {
        return allele2_.getDouble(index);
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @param index The index to set the value at.
       * @param value The allele2 to set.
       * @return This builder for chaining.
       */
      public Builder setAllele2(
          int index, double value) {

        ensureAllele2IsMutable();
        allele2_.setDouble(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @param value The allele2 to add.
       * @return This builder for chaining.
       */
      public Builder addAllele2(double value) {

        ensureAllele2IsMutable();
        allele2_.addDouble(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @param values The allele2 to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllele2(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAllele2IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allele2_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double allele2 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllele2() {
        allele2_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Well)
    }

    // @@protoc_insertion_point(class_scope:Well)
    private static final net.mahtabalam.protos.RawDataResultProto.Well DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.mahtabalam.protos.RawDataResultProto.Well();
    }

    public static net.mahtabalam.protos.RawDataResultProto.Well getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Well>
        PARSER = new com.google.protobuf.AbstractParser<Well>() {
      @java.lang.Override
      public Well parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Well> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Well> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.mahtabalam.protos.RawDataResultProto.Well getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RawDataResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RawDataResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Well_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Well_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023RawDataResult.proto\"+\n\rRawDataResult\022\032" +
      "\n\013wellResults\030\001 \003(\0132\005.Well\"U\n\004Well\022\n\n\002id" +
      "\030\001 \001(\t\022\037\n\nalleleType\030\002 \001(\0162\013.AlleleType\022" +
      "\017\n\007allele1\030\003 \003(\001\022\017\n\007allele2\030\004 \003(\001*.\n\nAll" +
      "eleType\022\016\n\nHOMOZYGOUS\020\000\022\020\n\014HETEROZYGOUS\020" +
      "\001B+\n\025net.mahtabalam.protosB\022RawDataResul" +
      "tProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_RawDataResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RawDataResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_RawDataResult_descriptor,
        new java.lang.String[] { "WellResults", });
    internal_static_Well_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Well_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Well_descriptor,
        new java.lang.String[] { "Id", "AlleleType", "Allele1", "Allele2", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
